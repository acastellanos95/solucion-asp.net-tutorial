[{"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\index.js":"1","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\InitialState.js":"2","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\reportWebVitals.js":"3","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\Store.js":"4","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\App.js":"5","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\Reducers\\index.js":"6","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Theme\\Theme.js":"7","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Actions\\UserAction.js":"8","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Navegation\\AppNavBar.js":"9","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Security\\RegisterUser.js":"10","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Security\\UpdateUserProfile.js":"11","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Security\\LoginUser.js":"12","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\Reducers\\UserSessionReducer.js":"13","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\Reducers\\OpenSnackbarReducer.js":"14","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Services\\HttpClient.js":"15","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Tools\\Style.js":"16","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Navegation\\Bar\\BarSession.js":"17","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Navegation\\Bar\\MenuIzquierda.js":"18","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Navegation\\Bar\\MenuDerecha.js":"19"},{"size":767,"mtime":1611179656096,"results":"20","hashOfConfig":"21"},{"size":31,"mtime":1611179656067,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1610551449222,"results":"23","hashOfConfig":"21"},{"size":375,"mtime":1611181439123,"results":"24","hashOfConfig":"21"},{"size":2314,"mtime":1611288294355,"results":"25","hashOfConfig":"21"},{"size":332,"mtime":1611181823470,"results":"26","hashOfConfig":"21"},{"size":241,"mtime":1610551449221,"results":"27","hashOfConfig":"21"},{"size":1191,"mtime":1611290385283,"results":"28","hashOfConfig":"21"},{"size":266,"mtime":1610551449217,"results":"29","hashOfConfig":"21"},{"size":3583,"mtime":1610551449218,"results":"30","hashOfConfig":"21"},{"size":4390,"mtime":1611245501283,"results":"31","hashOfConfig":"21"},{"size":2081,"mtime":1611291349723,"results":"32","hashOfConfig":"21"},{"size":814,"mtime":1611283775551,"results":"33","hashOfConfig":"21"},{"size":430,"mtime":1611179656072,"results":"34","hashOfConfig":"21"},{"size":596,"mtime":1611289301826,"results":"35","hashOfConfig":"21"},{"size":407,"mtime":1610551449219,"results":"36","hashOfConfig":"21"},{"size":3249,"mtime":1611289876922,"results":"37","hashOfConfig":"21"},{"size":1670,"mtime":1611281947466,"results":"38","hashOfConfig":"21"},{"size":718,"mtime":1611289810912,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"dw1s25",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\index.js",[],["82","83"],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\InitialState.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\reportWebVitals.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\Store.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\App.js",["84","85"],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport { ThemeProvider as MuithemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"./Theme/Theme\";\r\nimport RegisterUser from \"./Components/Security/RegisterUser\";\r\nimport LoginUser from \"./Components/Security/LoginUser\";\r\nimport UpdateUserProfile from \"./Components/Security/UpdateUserProfile\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, Snackbar } from \"@material-ui/core\";\r\nimport AppNavBar from \"./Components/Navegation/AppNavBar\";\r\nimport { useStateValue } from \"./Context/Store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { obtainCurrentUser } from \"./Actions/UserAction\";\r\n\r\nfunction App() {\r\n  const [{ sesionUsuario, openSnackbar }, dispatch] = useStateValue();\r\n  const [iniciaApp, setIniciaApp] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!iniciaApp) {\r\n      obtainCurrentUser(dispatch)\r\n        .then((response) => {\r\n          setIniciaApp(true);\r\n        })\r\n        .catch((error) => {\r\n          setIniciaApp(true);\r\n        });\r\n    }\r\n  }, [iniciaApp]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        open={openSnackbar ? openSnackbar.open : false}\r\n        autoHideDuration={3000}\r\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        message={\r\n          <span id=\"message-id\">\r\n            {openSnackbar ? openSnackbar.mensaje : \"\"}\r\n          </span>\r\n        }\r\n        onClose={() =>\r\n          dispatch({\r\n            type: \"OPEN_SNACKBAR\",\r\n            openMessage: {\r\n              open: false,\r\n              mensaje: \"\",\r\n            },\r\n          })\r\n        }\r\n      ></Snackbar>\r\n      <Router>\r\n        <MuithemeProvider theme={theme}>\r\n          <AppNavBar />\r\n          <Grid container>\r\n            <Switch>\r\n              <Route exact path=\"/auth/login\" component={LoginUser} />\r\n              <Route exact path=\"/auth/register\" component={RegisterUser} />\r\n              <Route exact path=\"/auth/profile\" component={UpdateUserProfile} />\r\n              <Route exact path=\"/\" component={LoginUser} />\r\n            </Switch>\r\n          </Grid>\r\n        </MuithemeProvider>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\Reducers\\index.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Theme\\Theme.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Actions\\UserAction.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Navegation\\AppNavBar.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Security\\RegisterUser.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Security\\UpdateUserProfile.js",["86","87"],"import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"../Tools/Style\";\r\nimport { obtainCurrentUser, updateUser } from \"../../Actions/UserAction\";\r\nimport { useStateValue } from \"../../Context/Store\";\r\n\r\nconst UpdateUserProfile = () => {\r\n  const [{ userSession}, dispatch] = useStateValue();\r\n  const [profile, setProfile] = useState({\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmacionPassword: \"\",\r\n  });\r\n\r\n  useEffect(()=>{\r\n    obtainCurrentUser(dispatch).then(response => {\r\n      console.log(\"esta es la data del objeto response del usuario actual \", response);\r\n      setProfile(response.data);\r\n    }).catch(error => {\r\n      console.log(\"hubo un error\");\r\n    });\r\n  }, []);\r\n\r\n  const onChangeProfileHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfile((profileBefore) => ({ ...profileBefore, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateUser(profile).then((response) => {\r\n      if(response.status === 200){\r\n        dispatch({\r\n          type : \"OPEN_SNACKBAR\",\r\n          openMessage : {\r\n            open : true,\r\n            mensaje : \"Se guardaron exitosamente los cambios en perfil usuario\"\r\n          }\r\n        });\r\n        window.localStorage.setItem(\"JWT_token\", response.data.token);\r\n      }\r\n      else{\r\n        dispatch({\r\n          type : \"OPEN_SNACKBAR\",\r\n          openMessage : {\r\n            open : true,\r\n            mensaje : \"Error al intentar guardar en \" + Object.keys(response.data.errores)\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Perfil de usuario\r\n        </Typography>\r\n        <form style={style.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"nombreCompleto\"\r\n                variant=\"outlined\"\r\n                onChange={onChangeProfileHandler}\r\n                value={profile.nombreCompleto || ''}\r\n                fullWidth\r\n                label=\"Ingrese su nombre completo\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"username\"\r\n                variant=\"outlined\"\r\n                onChange={onChangeProfileHandler}\r\n                value={profile.username || ''}\r\n                fullWidth\r\n                label=\"Ingrese su username\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                onChange={onChangeProfileHandler}\r\n                value={profile.email || ''}\r\n                fullWidth\r\n                label=\"Ingrese su email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"password\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                onChange={onChangeProfileHandler}\r\n                value={profile.password || ''}\r\n                fullWidth\r\n                label=\"Ingrese su password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"confirmacionPassword\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                onChange={onChangeProfileHandler}\r\n                value={profile.confirmacionPassword || ''}\r\n                fullWidth\r\n                label=\"Confirme su password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={style.submit}\r\n              >\r\n                Guardar datos\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateUserProfile;\r\n","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Security\\LoginUser.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\Reducers\\UserSessionReducer.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Context\\Reducers\\OpenSnackbarReducer.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Services\\HttpClient.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Tools\\Style.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Navegation\\Bar\\BarSession.js",["88"],"import {\r\n  Avatar,\r\n  Button,\r\n  Drawer,\r\n  IconButton,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../../Context/Store\";\r\nimport reactImg from \"../../../logo.svg\";\r\nimport MenuDerecha from \"./MenuDerecha\";\r\nimport MenuIzquierda from \"./MenuIzquierda\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seccionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  seccionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  avatarSize: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  listItemText: {\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n    paddingLeft: \"15px\",\r\n    color: \"#212121\",\r\n  },\r\n}));\r\n\r\nconst BarSession = (props) => {\r\n  const classes = useStyles();\r\n  const [{ userSession }, dispatch] = useStateValue();\r\n  const [abrirMenuIzquierdo, setAbrirMenuIzquierdo] = useState(false);\r\n  const [abrirMenuDerecho, setAbrirMenuDerecho] = useState(false);\r\n\r\n  const cerrarMenuDerecho = () => {\r\n    setAbrirMenuDerecho(false);\r\n  };\r\n\r\n  const cerrarMenuIzquierdo = () => {\r\n    setAbrirMenuIzquierdo(false);\r\n  };\r\n\r\n  const salirSesionApp = () => {\r\n    localStorage.removeItem(\"JWT_token\");\r\n    props.history.push(\"/auth/login\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        open={abrirMenuIzquierdo}\r\n        onClose={cerrarMenuIzquierdo}\r\n        anchor=\"left\"\r\n      >\r\n        <div\r\n          className={classes.list}\r\n          onKeyDown={cerrarMenuIzquierdo}\r\n          onClick={cerrarMenuIzquierdo}\r\n        >\r\n          <MenuIzquierda classes={classes} />\r\n        </div>\r\n      </Drawer>\r\n      <Drawer\r\n        open={abrirMenuDerecho}\r\n        onClose={cerrarMenuDerecho}\r\n        anchor=\"right\"\r\n      >\r\n        <div\r\n          className={classes.list}\r\n          onKeyDown={cerrarMenuDerecho}\r\n          onClick={cerrarMenuDerecho}\r\n        >\r\n          <MenuDerecha classes={classes} salirSesion={salirSesionApp} usuario={userSession ? userSession.user : null} />\r\n        </div>\r\n      </Drawer>\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => {\r\n            setAbrirMenuIzquierdo(true);\r\n          }}\r\n        >\r\n          <i className=\"material-icons\">menu</i>\r\n        </IconButton>\r\n        <Typography variant=\"h6\">Cursos Online</Typography>\r\n        <div className={classes.grow}></div>\r\n        <div className={classes.seccionDesktop}>\r\n          <Button color=\"inherit\">Salir</Button>\r\n          <Button color=\"inherit\">\r\n            {userSession ? userSession.user.nombreCompleto : \"\"}\r\n          </Button>\r\n          <Avatar src={reactImg} />\r\n        </div>\r\n        <div className={classes.seccionMobile}>\r\n          <IconButton color=\"inherit\" onClick={() => {\r\n            setAbrirMenuDerecho(true);\r\n          }}>\r\n            <i className=\"material-icons\">more_vert</i>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(BarSession);\r\n","C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Navegation\\Bar\\MenuIzquierda.js",[],"C:\\Users\\Andre\\Documents\\2020\\solucion-asp.net-tutorial\\cursos-online-app\\src\\Components\\Navegation\\Bar\\MenuDerecha.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":16,"column":12,"nodeType":"95","messageId":"96","endLine":16,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":29,"column":6,"nodeType":"99","endLine":29,"endColumn":17,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":14,"column":12,"nodeType":"95","messageId":"96","endLine":14,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":30,"column":6,"nodeType":"99","endLine":30,"endColumn":8,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":50,"column":27,"nodeType":"95","messageId":"96","endLine":50,"endColumn":35},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'sesionUsuario' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'userSession' is assigned a value but never used.",["107"],"'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [dispatch, iniciaApp]",{"range":"112","text":"113"},"Update the dependencies array to be: [dispatch]",{"range":"114","text":"115"},[1090,1101],"[dispatch, iniciaApp]",[846,848],"[dispatch]"]